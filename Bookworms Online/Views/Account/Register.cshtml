@model Bookworms_Online.Models.RegisterViewModel

<form asp-action="Register" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="FirstName" class="control-label"></label>
        <input asp-for="FirstName" class="form-control" />
        <span asp-validation-for="FirstName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="LastName" class="control-label"></label>
        <input asp-for="LastName" class="form-control" />
        <span asp-validation-for="LastName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CreditCardNo" class="control-label"></label>
        <input asp-for="CreditCardNo" class="form-control" />
        <span asp-validation-for="CreditCardNo" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="MobileNo" class="control-label"></label>
        <input asp-for="MobileNo" class="form-control" />
        <span asp-validation-for="MobileNo" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="BillingAddress" class="control-label"></label>
        <input asp-for="BillingAddress" class="form-control" />
        <span asp-validation-for="BillingAddress" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ShippingAddress" class="control-label"></label>
        <input asp-for="ShippingAddress" class="form-control" />
        <span asp-validation-for="ShippingAddress" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email" class="control-label"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password" class="control-label"></label>
        <input asp-for="Password" class="form-control" id="password" onkeyup="checkPasswordStrength()" />
        <span asp-validation-for="Password" class="text-danger"></span>
        <div id="password-strength" class="text-danger"></div>
    </div>
    <div class="form-group">
        <label asp-for="ConfirmPassword" class="control-label"></label>
        <input asp-for="ConfirmPassword" class="form-control" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Photo" class="control-label"></label>
        <input asp-for="Photo" type="file" class="form-control" accept=".jpg,.jpeg,.png" />
        <span asp-validation-for="Photo" class="text-danger"></span>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Register</button>
    </div>
</form>

<script>
    function checkPasswordStrength() {
        const password = document.getElementById("password").value;
        const strengthIndicator = document.getElementById("password-strength");
        let score = 0;
        let complexity = "Very Weak";
        let color = "red"; // Default color

        // Check password criteria
        if (password.length >= 12) score++; // Score 1
        if (/[a-z]/.test(password)) score++; // Score 2
        if (/[A-Z]/.test(password)) score++; // Score 3
        if (/[0-9]/.test(password)) score++; // Score 4
        if (/[^a-zA-Z0-9]/.test(password)) score++; // Score 5

        // Determine complexity based on score
        switch (score) {
            case 0:
            case 1:
                complexity = "Very Weak";
                color = "red";
                break;
            case 2:
                complexity = "Weak";
                color = "orange";
                break;
            case 3:
                complexity = "Medium";
                color = "yellow";
                break;
            case 4:
                complexity = "Strong";
                color = "blue";
                break;
            case 5:
                complexity = "Excellent";
                color = "green";
                break;
        }

        // Update the strength indicator
        strengthIndicator.textContent = `Password Strength: ${complexity}`;
        strengthIndicator.style.color = color; // Set color directly for testing
    }
</script>